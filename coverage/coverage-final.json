{"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/BaseState.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/BaseState.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":13},"end":{"line":3,"column":37}},"4":{"start":{"line":4,"column":17},"end":{"line":13,"column":3}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"6":{"start":{"line":8,"column":4},"end":{"line":11,"column":6}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":39}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":38}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":29},"end":{"line":13,"column":1}}},"1":{"name":"BaseState","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":29},"end":{"line":7,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":8,"column":34},"end":{"line":8,"column":35}},"loc":{"start":{"line":8,"column":60},"end":{"line":11,"column":5}}}},"branchMap":{},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":13,"6":4,"7":0,"8":0,"9":4,"10":4},"f":{"0":4,"1":13,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"BaseState.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/states/BaseState.ts"],"names":[],"mappings":";;AAAA,sCAAgC;AAUhC;IAUE,mBAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;IAAG,CAAC;IAE5B,2BAAO,GAAd,UAAe,KAAY,EAAE,OAAgB;QAC3C,cAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;QACpB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAC/B,CAAC;IACH,gBAAC;AAAD,CAAC,AAhBD,IAgBC","sourcesContent":["import noop from '../utils/noop'\n\ntype StateType = 'Pass'\n  | 'Wait'\n  | 'Task'\n  | 'Choice'\n  | 'Fail'\n  | 'Parallel'\n  | 'Succeed'\n\nexport default class BaseState<Context> {\n\n  public Type: StateType\n\n  public Next?: Thunk<BaseState<Context>>\n\n  public End?: boolean\n\n  public Comment?: string\n\n  constructor(public Name: string) {}\n\n  public execute(input: mixed, context: Context): Promise<mixed> {\n    noop(input, context)\n    return Promise.resolve(input)\n  }\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"622dcbf9ad6cd3f9ac2761af2f7241c7e55b85b0"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/ChoiceState.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/ChoiceState.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":4,"column":18},"end":{"line":4,"column":40}},"5":{"start":{"line":5,"column":14},"end":{"line":5,"column":33}},"6":{"start":{"line":6,"column":19},"end":{"line":6,"column":42}},"7":{"start":{"line":7,"column":14},"end":{"line":7,"column":30}},"8":{"start":{"line":8,"column":14},"end":{"line":8,"column":33}},"9":{"start":{"line":9,"column":17},"end":{"line":26,"column":1}},"10":{"start":{"line":27,"column":27},"end":{"line":54,"column":3}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":36}},"12":{"start":{"line":31,"column":4},"end":{"line":52,"column":6}},"13":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"14":{"start":{"line":33,"column":12},"end":{"line":33,"column":102}},"15":{"start":{"line":33,"column":58},"end":{"line":33,"column":92}},"16":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"17":{"start":{"line":36,"column":12},"end":{"line":36,"column":102}},"18":{"start":{"line":36,"column":57},"end":{"line":36,"column":91}},"19":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":44}},"21":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"22":{"start":{"line":42,"column":12},"end":{"line":42,"column":150}},"23":{"start":{"line":44,"column":20},"end":{"line":44,"column":61}},"24":{"start":{"line":45,"column":19},"end":{"line":45,"column":23}},"25":{"start":{"line":46,"column":8},"end":{"line":51,"column":18}},"26":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"27":{"start":{"line":48,"column":16},"end":{"line":48,"column":76}},"28":{"start":{"line":50,"column":12},"end":{"line":50,"column":23}},"29":{"start":{"line":53,"column":4},"end":{"line":53,"column":31}},"30":{"start":{"line":55,"column":18},"end":{"line":65,"column":22}},"31":{"start":{"line":56,"column":4},"end":{"line":56,"column":42}},"32":{"start":{"line":58,"column":20},"end":{"line":58,"column":24}},"33":{"start":{"line":59,"column":19},"end":{"line":59,"column":30}},"34":{"start":{"line":59,"column":39},"end":{"line":59,"column":71}},"35":{"start":{"line":60,"column":8},"end":{"line":60,"column":48}},"36":{"start":{"line":61,"column":8},"end":{"line":61,"column":26}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":21}},"38":{"start":{"line":64,"column":4},"end":{"line":64,"column":22}},"39":{"start":{"line":66,"column":0},"end":{"line":66,"column":32}},"40":{"start":{"line":67,"column":19},"end":{"line":94,"column":22}},"41":{"start":{"line":68,"column":4},"end":{"line":68,"column":43}},"42":{"start":{"line":70,"column":20},"end":{"line":70,"column":58}},"43":{"start":{"line":71,"column":8},"end":{"line":71,"column":30}},"44":{"start":{"line":72,"column":8},"end":{"line":72,"column":39}},"45":{"start":{"line":73,"column":8},"end":{"line":73,"column":43}},"46":{"start":{"line":74,"column":8},"end":{"line":74,"column":45}},"47":{"start":{"line":75,"column":8},"end":{"line":75,"column":39}},"48":{"start":{"line":76,"column":8},"end":{"line":76,"column":39}},"49":{"start":{"line":77,"column":8},"end":{"line":77,"column":21}},"50":{"start":{"line":82,"column":4},"end":{"line":92,"column":6}},"51":{"start":{"line":83,"column":28},"end":{"line":83,"column":73}},"52":{"start":{"line":84,"column":26},"end":{"line":84,"column":113}},"53":{"start":{"line":84,"column":59},"end":{"line":84,"column":96}},"54":{"start":{"line":85,"column":29},"end":{"line":85,"column":76}},"55":{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},"56":{"start":{"line":87,"column":22},"end":{"line":87,"column":56}},"57":{"start":{"line":88,"column":12},"end":{"line":88,"column":56}},"58":{"start":{"line":90,"column":19},"end":{"line":90,"column":57}},"59":{"start":{"line":91,"column":8},"end":{"line":91,"column":53}},"60":{"start":{"line":93,"column":4},"end":{"line":93,"column":23}},"61":{"start":{"line":95,"column":0},"end":{"line":95,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":27},"end":{"line":27,"column":28}},"loc":{"start":{"line":27,"column":39},"end":{"line":54,"column":1}}},"1":{"name":"ChoiceRuleCondition","decl":{"start":{"line":28,"column":13},"end":{"line":28,"column":32}},"loc":{"start":{"line":28,"column":41},"end":{"line":30,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":44},"end":{"line":31,"column":45}},"loc":{"start":{"line":31,"column":61},"end":{"line":52,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":35},"end":{"line":33,"column":36}},"loc":{"start":{"line":33,"column":56},"end":{"line":33,"column":94}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":34},"end":{"line":36,"column":35}},"loc":{"start":{"line":36,"column":55},"end":{"line":36,"column":93}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":46,"column":33},"end":{"line":46,"column":34}},"loc":{"start":{"line":46,"column":52},"end":{"line":51,"column":9}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":18},"end":{"line":55,"column":19}},"loc":{"start":{"line":55,"column":36},"end":{"line":65,"column":1}}},"7":{"name":"ChoiceRule","decl":{"start":{"line":57,"column":13},"end":{"line":57,"column":23}},"loc":{"start":{"line":57,"column":32},"end":{"line":63,"column":5}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":67,"column":19},"end":{"line":67,"column":20}},"loc":{"start":{"line":67,"column":37},"end":{"line":94,"column":1}}},"9":{"name":"ChoiceState","decl":{"start":{"line":69,"column":13},"end":{"line":69,"column":24}},"loc":{"start":{"line":69,"column":33},"end":{"line":78,"column":5}}},"10":{"name":"(anonymous_10)","decl":{"start":{"line":82,"column":36},"end":{"line":82,"column":37}},"loc":{"start":{"line":82,"column":62},"end":{"line":92,"column":5}}},"11":{"name":"(anonymous_11)","decl":{"start":{"line":84,"column":39},"end":{"line":84,"column":40}},"loc":{"start":{"line":84,"column":57},"end":{"line":84,"column":98}}}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}]},"1":{"loc":{"start":{"line":33,"column":65},"end":{"line":33,"column":91}},"type":"binary-expr","locations":[{"start":{"line":33,"column":65},"end":{"line":33,"column":68}},{"start":{"line":33,"column":72},"end":{"line":33,"column":91}}]},"2":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}]},"3":{"loc":{"start":{"line":36,"column":64},"end":{"line":36,"column":90}},"type":"binary-expr","locations":[{"start":{"line":36,"column":64},"end":{"line":36,"column":67}},{"start":{"line":36,"column":71},"end":{"line":36,"column":90}}]},"4":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}]},"5":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}]},"6":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}]},"7":{"loc":{"start":{"line":48,"column":23},"end":{"line":48,"column":75}},"type":"binary-expr","locations":[{"start":{"line":48,"column":23},"end":{"line":48,"column":26}},{"start":{"line":48,"column":30},"end":{"line":48,"column":75}}]},"8":{"loc":{"start":{"line":60,"column":16},"end":{"line":60,"column":47}},"type":"binary-expr","locations":[{"start":{"line":60,"column":16},"end":{"line":60,"column":39}},{"start":{"line":60,"column":43},"end":{"line":60,"column":47}}]},"9":{"loc":{"start":{"line":70,"column":20},"end":{"line":70,"column":58}},"type":"binary-expr","locations":[{"start":{"line":70,"column":20},"end":{"line":70,"column":50}},{"start":{"line":70,"column":54},"end":{"line":70,"column":58}}]},"10":{"loc":{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},{"start":{"line":86,"column":8},"end":{"line":89,"column":9}}]}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":1,"13":6,"14":0,"15":0,"16":6,"17":0,"18":0,"19":6,"20":0,"21":6,"22":0,"23":6,"24":6,"25":6,"26":96,"27":6,"28":90,"29":1,"30":1,"31":1,"32":2,"33":2,"34":2,"35":2,"36":2,"37":2,"38":1,"39":1,"40":1,"41":1,"42":4,"43":4,"44":4,"45":4,"46":4,"47":4,"48":4,"49":4,"50":1,"51":4,"52":4,"53":6,"54":4,"55":4,"56":1,"57":1,"58":3,"59":3,"60":1,"61":1},"f":{"0":1,"1":2,"2":6,"3":0,"4":0,"5":96,"6":1,"7":2,"8":1,"9":4,"10":4,"11":6},"b":{"0":[0,6],"1":[0,0],"2":[0,6],"3":[0,0],"4":[0,6],"5":[0,6],"6":[6,90],"7":[6,6],"8":[2,2],"9":[4,4],"10":[1,3]},"inputSourceMap":{"version":3,"file":"ChoiceState.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/states/ChoiceState.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseState from './BaseState'\nimport { RuleOperator } from '../interface/IChoiceState'\nimport { getVariable, runRuleCondition, resolveThunk } from '../utils'\nimport StateError from './StateError'\nimport { find } from 'ramda'\nimport {\n  applyInputPath,\n  applyOutputPath,\n} from '../utils'\n\nconst Operations = [\n  'StringEquals',\n  'StringLessThan',\n  'StringGreaterThan',\n  'StringLessThanEquals',\n  'StringGreaterThanEquals',\n  'NumericEquals',\n  'NumericLessThan',\n  'NumericGreaterThan',\n  'NumericLessThanEquals',\n  'NumericGreaterThanEquals',\n  'BooleanEquals',\n  'TimestampEquals',\n  'TimestampLessThan',\n  'TimestampGreaterThan',\n  'TimestampLessThanEquals',\n  'TimestampGreaterThanEquals',\n]\n\ninterface RuleConditionConfig {\n  Variable?: string,\n  StringEquals?: string,\n  StringLessThan?: string,\n  StringGreaterThan?: string,\n  StringLessThanEquals?: string,\n  StringGreaterThanEquals?: string,\n  NumericEquals?: number,\n  NumericLessThan?: number,\n  NumericGreaterThan?: number,\n  NumericLessThanEquals?: number,\n  NumericGreaterThanEquals?: number,\n  BooleanEquals?: boolean,\n  TimestampEquals?: Timestamp,\n  TimestampLessThan?: Timestamp,\n  TimestampGreaterThan?: Timestamp,\n  TimestampLessThanEquals?: Timestamp,\n  TimestampGreaterThanEquals?: Timestamp,\n  And?: ChoiceRuleCondition[],\n  Or?: ChoiceRuleCondition[],\n  Not?: ChoiceRuleCondition,\n}\nclass ChoiceRuleCondition {\n\n  public Variable?: string\n  public StringEquals?: string\n  public StringLessThan?: string\n  public StringGreaterThan?: string\n  public StringLessThanEquals?: string\n  public StringGreaterThanEquals?: string\n  public NumericEquals?: number\n  public NumericLessThan?: number\n  public NumericGreaterThan?: number\n  public NumericLessThanEquals?: number\n  public NumericGreaterThanEquals?: number\n  public BooleanEquals?: boolean\n  public TimestampEquals?: Timestamp\n  public TimestampLessThan?: Timestamp\n  public TimestampGreaterThan?: Timestamp\n  public TimestampLessThanEquals?: Timestamp\n  public TimestampGreaterThanEquals?: Timestamp\n  public And?: ChoiceRuleCondition[]\n  public Or?: ChoiceRuleCondition[]\n  public Not?: ChoiceRuleCondition\n\n  constructor(\n    config: RuleConditionConfig\n  ) {\n    Object.assign(this, config)\n  }\n\n  public operate(input: mixed): boolean {\n    if (this.And) {\n      return this.And.reduce(\n        (acc: boolean, rule: ChoiceRuleCondition) => acc && rule.operate(input),\n        true,\n      )\n    }\n    if (this.Or) {\n      return this.Or.reduce(\n        (acc: boolean, rule: ChoiceRuleCondition) => acc || rule.operate(input),\n        false,\n      )\n    }\n    if (this.Not) {\n      return !this.Not.operate(input)\n    }\n    if (!this.Variable) {\n      throw new StateError(\n        'Invalid ChoiceRuleCondition',\n        'A ChoiceRuleCondition must have define a Variable or set And, Or, or Not',\n      )\n    }\n    const value = getVariable(input, this.Variable)\n    const that = this\n    return Operations.reduce((acc: boolean, op: RuleOperator) => {\n      if (that[op]) {\n        return acc || runRuleCondition(op, value, that[op])\n      }\n      return acc\n    }, false)\n  }\n}\n\ninterface ChoiceRuleConfig<Context> extends RuleConditionConfig {\n  Next: Thunk<BaseState<Context>>\n}\nexport class ChoiceRule<Context> extends ChoiceRuleCondition {\n\n  public Next: Thunk<BaseState<Context>>\n\n  constructor(\n    config: ChoiceRuleConfig<Context>,\n  ) {\n    const { Next, ...conf } = config\n    super(conf)\n    this.Next = Next\n  }\n}\n\ninterface ChoiceStateConfig<Context> {\n  Name: string\n  Choices: ChoiceRule<Context>[]\n  Default: Thunk<BaseState<Context>>\n  Comment?: string\n  InputPath?: string\n  OutputPath?: string\n}\nexport default class ChoiceState<Context>\n  extends BaseState<Context> {\n\n  public Type: 'Choice'\n\n  public Comment?: string\n\n  public InputPath?: string\n\n  public OutputPath?: string\n\n  public Choices: ChoiceRule<Context>[]\n\n  public Default: Thunk<BaseState<Context>>\n\n  constructor(config: ChoiceStateConfig<Context>) {\n    super(config.Name)\n    this.Type = 'Choice'\n    this.Comment = config.Comment\n    this.InputPath = config.InputPath\n    this.OutputPath = config.OutputPath\n    this.Choices = config.Choices\n    this.Default = config.Default\n  }\n\n  /**\n   * Execute the choice state.\n   */\n  public execute(input: mixed, context: Context): Promise<mixed> {\n    const filteredInput = applyInputPath(input, this.InputPath)\n    const validChoice = find(\n      (choice: ChoiceRule<Context>) => choice.operate(filteredInput),\n      this.Choices,\n    )\n    const filteredOutput = applyOutputPath(input, this.OutputPath)\n    if (!validChoice) {\n      const def = resolveThunk(this.Default)\n      return def.execute(filteredOutput, context)\n    }\n    const next = resolveThunk(validChoice.Next)\n    return next.execute(filteredOutput, context)\n  }\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"8ca56e6157b31a00f03a97b64d33eb34f58dec91"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/PassState.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/PassState.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":4,"column":18},"end":{"line":4,"column":40}},"5":{"start":{"line":5,"column":14},"end":{"line":5,"column":33}},"6":{"start":{"line":6,"column":19},"end":{"line":6,"column":42}},"7":{"start":{"line":7,"column":17},"end":{"line":36,"column":22}},"8":{"start":{"line":8,"column":4},"end":{"line":8,"column":41}},"9":{"start":{"line":10,"column":20},"end":{"line":10,"column":24}},"10":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":12,"column":123}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":55}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"14":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"15":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"16":{"start":{"line":18,"column":8},"end":{"line":18,"column":39}},"17":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"18":{"start":{"line":20,"column":8},"end":{"line":20,"column":45}},"19":{"start":{"line":21,"column":8},"end":{"line":21,"column":45}},"20":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"21":{"start":{"line":23,"column":8},"end":{"line":23,"column":21}},"22":{"start":{"line":25,"column":4},"end":{"line":34,"column":6}},"23":{"start":{"line":26,"column":28},"end":{"line":26,"column":73}},"24":{"start":{"line":27,"column":29},"end":{"line":27,"column":97}},"25":{"start":{"line":28,"column":29},"end":{"line":28,"column":85}},"26":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"27":{"start":{"line":30,"column":12},"end":{"line":30,"column":51}},"28":{"start":{"line":32,"column":19},"end":{"line":32,"column":50}},"29":{"start":{"line":33,"column":8},"end":{"line":33,"column":53}},"30":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"31":{"start":{"line":37,"column":0},"end":{"line":37,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":18}},"loc":{"start":{"line":7,"column":35},"end":{"line":36,"column":1}}},"1":{"name":"PassState","decl":{"start":{"line":9,"column":13},"end":{"line":9,"column":22}},"loc":{"start":{"line":9,"column":31},"end":{"line":24,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":34},"end":{"line":25,"column":35}},"loc":{"start":{"line":25,"column":60},"end":{"line":34,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}]},"1":{"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":39}},"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":23}},{"start":{"line":11,"column":27},"end":{"line":11,"column":39}}]},"2":{"loc":{"start":{"line":14,"column":16},"end":{"line":14,"column":54}},"type":"binary-expr","locations":[{"start":{"line":14,"column":16},"end":{"line":14,"column":46}},{"start":{"line":14,"column":50},"end":{"line":14,"column":54}}]},"3":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}]}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":1,"31":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[0,1],"1":[1,0],"2":[1,1],"3":[1,0]},"inputSourceMap":{"version":3,"file":"PassState.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/states/PassState.ts"],"names":[],"mappings":";;;AAAA,yCAAmC;AACnC,kCAKiB;AACjB,2CAAsC;AAYtC;IAAgD,qCAAkB;IAkBhE,mBAAY,MAAgC;QAA5C,iBAgBC;QAfC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAChC,MAAM,IAAI,oBAAU,CAClB,mBAAmB,EACnB,yDAAyD,CAC1D,CAAA;QACH,CAAC;QACD,QAAA,kBAAM,MAAM,CAAC,IAAI,CAAC,SAAA;QAClB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAA;QAClB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA;QACvB,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA;QACrB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAA;QAC7B,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAA;QACjC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;QACnC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;QACnC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;;IAC7B,CAAC;IAEM,2BAAO,GAAd,UAAe,KAAY,EAAE,OAAgB;QAC3C,IAAM,aAAa,GAAG,sBAAc,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;QAC3D,IAAM,cAAc,GAAG,uBAAe,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;QACnF,IAAM,cAAc,GAAG,uBAAe,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;QACvE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;QACxC,CAAC;QACD,IAAM,IAAI,GAAG,oBAAY,CAAC,IAAI,CAAC,IAAK,CAAC,CAAA;QACrC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,CAAA;IAC9C,CAAC;IACH,gBAAC;AAAD,CAAC,AA9CD,CAAgD,mBAAS,GA8CxD","sourcesContent":["import BaseState from './BaseState'\nimport {\n  applyInputPath,\n  applyOutputPath,\n  applyResultPath,\n  resolveThunk,\n} from '../utils'\nimport StateError from './StateError';\n\ntype PassStateConfig<Context> = {\n  Name: string;\n  Next?: Thunk<BaseState<Context>>;\n  End?: boolean;\n  Comment?: string;\n  InputPath?: string;\n  OutputPath?: string;\n  ResultPath?: string;\n  Result?: mixed;\n}\nexport default class PassState<Context> extends BaseState<Context> {\n\n  public Type: 'Pass'\n\n  public Next?: Thunk<BaseState<Context>>;\n\n  public End?: boolean\n\n  public Comment?: string\n\n  public InputPath?: string\n\n  public OutputPath?: string\n\n  public Result?: mixed\n\n  public ResultPath?: string\n\n  constructor(config: PassStateConfig<Context>) {\n    if (!config.End && !config.Next) {\n      throw new StateError(\n        'Invalid PassState',\n        'PassStates require either End to be set or a Next state',\n      )\n    }\n    super(config.Name)\n    this.Type = 'Pass'\n    this.Next = config.Next\n    this.End = config.End\n    this.Comment = config.Comment\n    this.InputPath = config.InputPath\n    this.OutputPath = config.OutputPath\n    this.ResultPath = config.ResultPath\n    this.Result = config.Result\n  }\n\n  public execute(input: mixed, context: Context): Promise<mixed> {\n    const filteredInput = applyInputPath(input, this.InputPath)\n    const filteredResult = applyResultPath(filteredInput, this.Result, this.ResultPath)\n    const filteredOutput = applyOutputPath(filteredResult, this.OutputPath)\n    if (this.End) {\n      return Promise.resolve(filteredOutput)\n    }\n    const next = resolveThunk(this.Next!)\n    return next.execute(filteredOutput, context)\n  }\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"939506db6f865014c862309ce197ddba402dd50d"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/StateError.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/StateError.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":4,"column":18},"end":{"line":13,"column":8}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":42}},"6":{"start":{"line":7,"column":20},"end":{"line":7,"column":52}},"7":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"8":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":36},"end":{"line":13,"column":1}}},"1":{"name":"StateError","decl":{"start":{"line":6,"column":13},"end":{"line":6,"column":23}},"loc":{"start":{"line":6,"column":38},"end":{"line":11,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":20},"end":{"line":7,"column":52}},"type":"binary-expr","locations":[{"start":{"line":7,"column":20},"end":{"line":7,"column":44}},{"start":{"line":7,"column":48},"end":{"line":7,"column":52}}]}},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":0,"7":0,"8":0,"9":0,"10":4,"11":4},"f":{"0":4,"1":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"StateError.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/states/StateError.ts"],"names":[],"mappings":";;;AAAA;IAAyB,sCAAK;IAI5B,oBAAY,KAAa,EAAE,KAAa;QAAxC,YACE,kBAAM,KAAK,CAAC,SAGb;QAFC,KAAI,CAAC,IAAI,GAAG,YAAY,CAAA;QACxB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAA;;IACpB,CAAC;IACH,iBAAC;AAAD,CAAC,AATD,CAAyB,KAAK,GAS7B;AAED,kBAAe,UAAU,CAAA","sourcesContent":["class StateError extends Error {\n\n  public cause: string\n\n  constructor(cause: string, error: string) {\n    super(error)\n    this.name = 'StateError'\n    this.cause = cause\n  }\n}\n\nexport default StateError\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"d83f2fa82314b7306e919a361265069e8010efd1"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/TaskState.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/TaskState.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":4,"column":18},"end":{"line":4,"column":40}},"5":{"start":{"line":5,"column":19},"end":{"line":5,"column":42}},"6":{"start":{"line":6,"column":21},"end":{"line":6,"column":53}},"7":{"start":{"line":7,"column":14},"end":{"line":7,"column":33}},"8":{"start":{"line":8,"column":17},"end":{"line":53,"column":22}},"9":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"10":{"start":{"line":11,"column":20},"end":{"line":11,"column":24}},"11":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":123}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":55}},"14":{"start":{"line":16,"column":8},"end":{"line":16,"column":28}},"15":{"start":{"line":17,"column":8},"end":{"line":17,"column":41}},"16":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"17":{"start":{"line":19,"column":8},"end":{"line":19,"column":31}},"18":{"start":{"line":20,"column":8},"end":{"line":20,"column":39}},"19":{"start":{"line":21,"column":8},"end":{"line":21,"column":43}},"20":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"21":{"start":{"line":23,"column":8},"end":{"line":23,"column":45}},"22":{"start":{"line":24,"column":8},"end":{"line":24,"column":53}},"23":{"start":{"line":25,"column":8},"end":{"line":25,"column":57}},"24":{"start":{"line":26,"column":8},"end":{"line":26,"column":21}},"25":{"start":{"line":28,"column":4},"end":{"line":51,"column":6}},"26":{"start":{"line":29,"column":8},"end":{"line":50,"column":11}},"27":{"start":{"line":31,"column":12},"end":{"line":49,"column":15}},"28":{"start":{"line":32,"column":16},"end":{"line":48,"column":17}},"29":{"start":{"line":34,"column":24},"end":{"line":36,"column":25}},"30":{"start":{"line":35,"column":28},"end":{"line":35,"column":139}},"31":{"start":{"line":37,"column":24},"end":{"line":37,"column":86}},"32":{"start":{"line":38,"column":24},"end":{"line":38,"column":84}},"33":{"start":{"line":40,"column":24},"end":{"line":40,"column":43}},"34":{"start":{"line":41,"column":24},"end":{"line":41,"column":97}},"35":{"start":{"line":42,"column":24},"end":{"line":42,"column":98}},"36":{"start":{"line":43,"column":24},"end":{"line":45,"column":25}},"37":{"start":{"line":44,"column":28},"end":{"line":44,"column":66}},"38":{"start":{"line":46,"column":24},"end":{"line":46,"column":65}},"39":{"start":{"line":47,"column":24},"end":{"line":47,"column":85}},"40":{"start":{"line":52,"column":4},"end":{"line":52,"column":21}},"41":{"start":{"line":54,"column":0},"end":{"line":54,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":17},"end":{"line":8,"column":18}},"loc":{"start":{"line":8,"column":35},"end":{"line":53,"column":1}}},"1":{"name":"TaskState","decl":{"start":{"line":10,"column":13},"end":{"line":10,"column":22}},"loc":{"start":{"line":10,"column":31},"end":{"line":27,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":34},"end":{"line":28,"column":35}},"loc":{"start":{"line":28,"column":60},"end":{"line":51,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":55},"end":{"line":29,"column":56}},"loc":{"start":{"line":29,"column":67},"end":{"line":50,"column":9}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":45},"end":{"line":31,"column":46}},"loc":{"start":{"line":31,"column":59},"end":{"line":49,"column":13}}}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}]},"1":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":39}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":23}},{"start":{"line":12,"column":27},"end":{"line":12,"column":39}}]},"2":{"loc":{"start":{"line":15,"column":16},"end":{"line":15,"column":54}},"type":"binary-expr","locations":[{"start":{"line":15,"column":16},"end":{"line":15,"column":46}},{"start":{"line":15,"column":50},"end":{"line":15,"column":54}}]},"3":{"loc":{"start":{"line":32,"column":16},"end":{"line":48,"column":17}},"type":"switch","locations":[{"start":{"line":33,"column":20},"end":{"line":38,"column":84}},{"start":{"line":39,"column":20},"end":{"line":47,"column":85}}]},"4":{"loc":{"start":{"line":34,"column":24},"end":{"line":36,"column":25}},"type":"if","locations":[{"start":{"line":34,"column":24},"end":{"line":36,"column":25}},{"start":{"line":34,"column":24},"end":{"line":36,"column":25}}]},"5":{"loc":{"start":{"line":34,"column":28},"end":{"line":34,"column":51}},"type":"binary-expr","locations":[{"start":{"line":34,"column":28},"end":{"line":34,"column":37}},{"start":{"line":34,"column":41},"end":{"line":34,"column":51}}]},"6":{"loc":{"start":{"line":43,"column":24},"end":{"line":45,"column":25}},"type":"if","locations":[{"start":{"line":43,"column":24},"end":{"line":45,"column":25}},{"start":{"line":43,"column":24},"end":{"line":45,"column":25}}]}},"s":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":5,"11":5,"12":0,"13":5,"14":5,"15":5,"16":5,"17":5,"18":5,"19":5,"20":5,"21":5,"22":5,"23":5,"24":5,"25":2,"26":6,"27":6,"28":12,"29":6,"30":0,"31":6,"32":6,"33":6,"34":6,"35":6,"36":6,"37":6,"38":0,"39":0,"40":2,"41":2},"f":{"0":2,"1":5,"2":6,"3":6,"4":12},"b":{"0":[0,5],"1":[5,0],"2":[5,5],"3":[6,6],"4":[0,6],"5":[6,0],"6":[6,0]},"inputSourceMap":{"version":3,"file":"TaskState.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/states/TaskState.ts"],"names":[],"mappings":";;;AAEA,yCAAmC;AAEnC,2CAAqC;AACrC,sDAAiD;AACjD,kCAIiB;AAgBjB;IAAgD,qCAAkB;IA0BhE,mBAAY,MAAgC;QAA5C,iBAkBC;QAjBC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAChC,MAAM,IAAI,oBAAU,CAClB,mBAAmB,EACnB,yDAAyD,CAC1D,CAAA;QACH,CAAC;QACD,QAAA,kBAAM,MAAM,CAAC,IAAI,CAAC,SAAA;QAClB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAA;QAClB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAA;QAC/B,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA;QACvB,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA;QACrB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAA;QAC7B,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAA;QACjC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;QACnC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;QACnC,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAA;QAC3C,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAA;;IACjD,CAAC;IAEY,2BAAO,GAApB,UAAqB,KAAY,EAAE,OAAgB;;gBAO3C,aAAa,UAEb,cAAc,EACd,cAAc,EAId,IAAI;;;;wBAbV,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC5B,MAAM,IAAI,oBAAU,CAClB,kBAAkB,EAClB,0DAA0D,CAC3D,CAAA;wBACH,CAAC;wCACqB,sBAAc,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;wBAC5C,qBAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,EAAA;;iCAA3C,SAA2C;yCACnC,uBAAe,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC;yCAC/C,uBAAe,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC;wBACvE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;4BACb,MAAM,gBAAC,cAAc,EAAA;wBACvB,CAAC;+BACY,sBAAY,CAAC,IAAI,CAAC,IAAK,CAAC;wBACrC,sBAAO,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,EAAA;;;;KAC7C;IACH,gBAAC;AAAD,CAAC,AA/DD,CAAgD,mBAAS,GA+DxD","sourcesContent":["import IRetrier from '../interface/IRetrier'\nimport Catcher from '../interface/ICatcher'\nimport BaseState from './BaseState'\nimport ResourceFn from '../ResourceFn'\nimport StateError from './StateError'\nimport resolveThunk from '../utils/resolveThunk';\nimport {\n  applyInputPath,\n  applyOutputPath,\n  applyResultPath,\n} from '../utils'\n\ntype TaskStateConfig<Context> = {\n  Name: string;\n  Resource: ResourceFn<Context>;\n  Next?: Thunk<BaseState<Context>>;\n  End?: boolean;\n  Comment?: string;\n  InputPath?: string;\n  OutputPath?: string;\n  ResultPath?: string;\n  // Retry?: Retrier[];\n  // Catch?: Catcher[];\n  TimeoutSeconds?: number;\n  HeartbeatSeconds?: number;\n}\nexport default class TaskState<Context> extends BaseState<Context> {\n\n  public Type: 'Task'\n\n  public Resource: ResourceFn<Context>\n\n  public Next?: Thunk<BaseState<Context>>\n\n  public End?: boolean\n\n  public Comment?: string\n\n  public InputPath?: string\n\n  public OutputPath?: string\n\n  public ResultPath?: string\n\n  public Retry?: IRetrier[]\n\n  public Catch?: Catcher[]\n\n  public TimeoutSeconds?: number\n\n  public HeartbeatSeconds?: number\n\n  constructor(config: TaskStateConfig<Context>) {\n    if (!config.End && !config.Next) {\n      throw new StateError(\n        'Invalid TaskState',\n        'TaskStates require either End to be set or a Next state',\n      )\n    }\n    super(config.Name)\n    this.Type = 'Task'\n    this.Resource = config.Resource\n    this.Next = config.Next\n    this.End = config.End\n    this.Comment = config.Comment\n    this.InputPath = config.InputPath\n    this.OutputPath = config.OutputPath\n    this.ResultPath = config.ResultPath\n    this.TimeoutSeconds = config.TimeoutSeconds\n    this.HeartbeatSeconds = config.HeartbeatSeconds\n  }\n\n  public async execute(input: mixed, context: Context): Promise<mixed> {\n    if (!this.End && !this.Next) {\n      throw new StateError(\n        'InvalidTaskState',\n        'Task states must either be terminal or have a next state',\n      )\n    }\n    const filteredInput = applyInputPath(input, this.InputPath)\n    const result = await this.Resource(filteredInput, context)\n    const filteredResult = applyResultPath(input, result, this.ResultPath)\n    const filteredOutput = applyOutputPath(filteredResult, this.OutputPath)\n    if (this.End) {\n      return filteredOutput\n    }\n    const next = resolveThunk(this.Next!)\n    return next.execute(filteredOutput, context)\n  }\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"60227a9272019c92d75b77bb442b55f7ac95411d"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/WaitState.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/states/WaitState.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":4,"column":18},"end":{"line":4,"column":40}},"5":{"start":{"line":5,"column":14},"end":{"line":5,"column":33}},"6":{"start":{"line":6,"column":19},"end":{"line":6,"column":42}},"7":{"start":{"line":7,"column":12},"end":{"line":7,"column":41}},"8":{"start":{"line":8,"column":17},"end":{"line":70,"column":22}},"9":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"10":{"start":{"line":11,"column":20},"end":{"line":11,"column":24}},"11":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":123}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":55}},"14":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"15":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"16":{"start":{"line":18,"column":8},"end":{"line":18,"column":39}},"17":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"18":{"start":{"line":20,"column":8},"end":{"line":20,"column":45}},"19":{"start":{"line":21,"column":8},"end":{"line":21,"column":39}},"20":{"start":{"line":22,"column":8},"end":{"line":22,"column":43}},"21":{"start":{"line":23,"column":8},"end":{"line":23,"column":47}},"22":{"start":{"line":24,"column":8},"end":{"line":24,"column":51}},"23":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"24":{"start":{"line":27,"column":4},"end":{"line":44,"column":6}},"25":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"26":{"start":{"line":29,"column":12},"end":{"line":29,"column":39}},"27":{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},"28":{"start":{"line":32,"column":27},"end":{"line":32,"column":51}},"29":{"start":{"line":33,"column":12},"end":{"line":33,"column":51}},"30":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"31":{"start":{"line":36,"column":12},"end":{"line":36,"column":74}},"32":{"start":{"line":38,"column":8},"end":{"line":42,"column":9}},"33":{"start":{"line":39,"column":36},"end":{"line":39,"column":85}},"34":{"start":{"line":40,"column":27},"end":{"line":40,"column":54}},"35":{"start":{"line":41,"column":12},"end":{"line":41,"column":51}},"36":{"start":{"line":43,"column":8},"end":{"line":43,"column":67}},"37":{"start":{"line":45,"column":4},"end":{"line":68,"column":6}},"38":{"start":{"line":46,"column":8},"end":{"line":67,"column":11}},"39":{"start":{"line":48,"column":12},"end":{"line":66,"column":15}},"40":{"start":{"line":49,"column":16},"end":{"line":49,"column":50}},"41":{"start":{"line":50,"column":16},"end":{"line":50,"column":28}},"42":{"start":{"line":51,"column":16},"end":{"line":51,"column":67}},"43":{"start":{"line":52,"column":16},"end":{"line":65,"column":24}},"44":{"start":{"line":53,"column":24},"end":{"line":64,"column":37}},"45":{"start":{"line":54,"column":28},"end":{"line":63,"column":29}},"46":{"start":{"line":55,"column":32},"end":{"line":57,"column":33}},"47":{"start":{"line":56,"column":36},"end":{"line":56,"column":58}},"48":{"start":{"line":58,"column":43},"end":{"line":58,"column":74}},"49":{"start":{"line":59,"column":32},"end":{"line":59,"column":77}},"50":{"start":{"line":62,"column":32},"end":{"line":62,"column":42}},"51":{"start":{"line":69,"column":4},"end":{"line":69,"column":21}},"52":{"start":{"line":71,"column":0},"end":{"line":71,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":17},"end":{"line":8,"column":18}},"loc":{"start":{"line":8,"column":35},"end":{"line":70,"column":1}}},"1":{"name":"WaitState","decl":{"start":{"line":10,"column":13},"end":{"line":10,"column":22}},"loc":{"start":{"line":10,"column":31},"end":{"line":26,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":37},"end":{"line":27,"column":38}},"loc":{"start":{"line":27,"column":54},"end":{"line":44,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":34},"end":{"line":45,"column":35}},"loc":{"start":{"line":45,"column":60},"end":{"line":68,"column":5}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":55},"end":{"line":46,"column":56}},"loc":{"start":{"line":46,"column":67},"end":{"line":67,"column":9}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":45},"end":{"line":48,"column":46}},"loc":{"start":{"line":48,"column":59},"end":{"line":66,"column":13}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":50},"end":{"line":52,"column":51}},"loc":{"start":{"line":52,"column":77},"end":{"line":65,"column":21}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":35},"end":{"line":53,"column":36}},"loc":{"start":{"line":53,"column":47},"end":{"line":64,"column":25}}}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}]},"1":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":39}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":23}},{"start":{"line":12,"column":27},"end":{"line":12,"column":39}}]},"2":{"loc":{"start":{"line":15,"column":16},"end":{"line":15,"column":54}},"type":"binary-expr","locations":[{"start":{"line":15,"column":16},"end":{"line":15,"column":46}},{"start":{"line":15,"column":50},"end":{"line":15,"column":54}}]},"3":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":8},"end":{"line":30,"column":9}}]},"4":{"loc":{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},{"start":{"line":31,"column":8},"end":{"line":34,"column":9}}]},"5":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}]},"6":{"loc":{"start":{"line":38,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":42,"column":9}},{"start":{"line":38,"column":8},"end":{"line":42,"column":9}}]},"7":{"loc":{"start":{"line":55,"column":32},"end":{"line":57,"column":33}},"type":"if","locations":[{"start":{"line":55,"column":32},"end":{"line":57,"column":33}},{"start":{"line":55,"column":32},"end":{"line":57,"column":33}}]}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":3,"12":0,"13":3,"14":3,"15":3,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":3,"23":3,"24":1,"25":3,"26":1,"27":2,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":3,"39":3,"40":3,"41":3,"42":3,"43":3,"44":3,"45":3,"46":3,"47":3,"48":0,"49":0,"50":0,"51":1,"52":1},"f":{"0":1,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3},"b":{"0":[0,3],"1":[3,0],"2":[3,3],"3":[1,2],"4":[1,1],"5":[1,0],"6":[0,0],"7":[3,0]},"inputSourceMap":{"version":3,"file":"WaitState.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/states/WaitState.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseState from './BaseState'\nimport { applyInputPath, resolveThunk } from '../utils'\nimport StateError from './StateError';\nconst debug = require('debug')('WaitState')\n\ntype WaitStateConfig<Context> = {\n  Name: string;\n  Next?: Thunk<BaseState<Context>>;\n  End?: boolean;\n  Comment?: string;\n  InputPath?: string;\n  OutputPath?: string;\n  Seconds?: number;\n  Timestamp?: Timestamp;\n  SecondsPath?: string;\n  TimestampPath?: string;\n}\nexport default class WaitState<Context> extends BaseState<Context> {\n\n  public Type: 'Wait'\n\n  public Next?: Thunk<BaseState<Context>>;\n\n  public End?: boolean\n\n  public Comment?: string\n\n  public InputPath?: string\n\n  public OutputPath?: string\n\n  public Seconds?: number\n\n  public Timestamp?: Timestamp\n\n  public SecondsPath?: string\n\n  public TimestampPath?: string\n\n  constructor(config: WaitStateConfig<Context>) {\n    if (!config.End && !config.Next) {\n      throw new StateError(\n        'Invalid WaitState',\n        'WaitStates require either End to be set or a Next state',\n      )\n    }\n    super(config.Name)\n    this.Next = config.Next\n    this.End = config.End\n    this.Comment = config.Comment\n    this.InputPath = config.InputPath\n    this.OutputPath = config.OutputPath\n    this.Seconds = config.Seconds\n    this.Timestamp = config.Timestamp\n    this.SecondsPath = config.SecondsPath\n    this.TimestampPath = config.TimestampPath\n  }\n\n  private getTimeout(input: mixed) {\n    if (this.Seconds) {\n      return this.Seconds * 1000\n    }\n    if (this.Timestamp) {\n      const waitTill = new Date(this.Timestamp)\n      return waitTill.getTime() - Date.now()\n    }\n    if (this.SecondsPath) {\n      return applyInputPath(input, this.SecondsPath) as number * 1000\n    }\n    if (this.TimestampPath) {\n      const waitTillTimestamp = applyInputPath(input, this.TimestampPath) as string\n      const waitTill = new Date(waitTillTimestamp)\n      return waitTill.getTime() - Date.now()\n    }\n    throw new Error('Could not parse duration for wait state')\n  }\n\n  public async execute(input: mixed, context: Context): Promise<mixed> {\n    const waittime = this.getTimeout(input)\n    const that = this\n    debug(`WaitState waiting for ${waittime} ms`)\n    return new Promise<mixed>(\n      (\n        resolve: (value?: mixed | PromiseLike<mixed> | undefined) => void,\n        reject: (reason?: mixed) => void,\n      ) => {\n        setTimeout(() => {\n          try {\n            if (that.End) {\n              return resolve(input)\n            }\n            const next = resolveThunk(that.Next!)\n            return resolve(next.execute(input, context))\n          } catch (e) {\n            reject(e)\n          }\n        }, waittime)\n      })\n  }\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"ac804e81f510147e8bc5a96825bc930179f7cff5"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyInputPath.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyInputPath.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":5,"column":20},"end":{"line":5,"column":24}},"5":{"start":{"line":7,"column":4},"end":{"line":8,"column":18}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":18}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"9":{"start":{"line":13,"column":23},"end":{"line":15,"column":5}},"10":{"start":{"line":16,"column":15},"end":{"line":16,"column":53}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":44}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}}},"fnMap":{"0":{"name":"applyInputPath","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":23}},"loc":{"start":{"line":4,"column":37},"end":{"line":18,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":8,"column":18}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":8,"column":18}},{"start":{"line":7,"column":4},"end":{"line":8,"column":18}}]},"1":{"loc":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},{"start":{"line":10,"column":4},"end":{"line":12,"column":5}}]}},"s":{"0":5,"1":5,"2":5,"3":5,"4":17,"5":17,"6":1,"7":16,"8":11,"9":16,"10":16,"11":16,"12":5},"f":{"0":17},"b":{"0":[1,16],"1":[11,5]},"inputSourceMap":{"version":3,"file":"applyInputPath.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyInputPath.ts"],"names":[],"mappings":";;AAAA,+BAAsC;AAEtC,wBACE,KAAY,EACZ,IAA+B;IAE/B,IAAI,SAAS,GAAG,IAAI,CAAA;IACpB,sBAAsB;IACtB,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;QAAC,MAAM,CAAC,EAAE,CAAA;IAC5B,uDAAuD;IACvD,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;QAAC,SAAS,GAAG,GAAG,CAAA;IAAC,CAAC;IAC3C,IAAM,YAAY,GAAG;QACnB,CAAC,EAAE,KAAK;KACT,CAAA;IACD,IAAM,IAAI,GAAG,gBAAQ,CAAC,SAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;IAC5C,MAAM,CAAC,YAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;AACjC,CAAC;AAdD,iCAcC","sourcesContent":["import { lensPath, view } from 'ramda'\n\nexport default function applyInputPath(\n  input: mixed,\n  path: string | undefined | null,\n): mixed {\n  let inputPath = path\n  // If the path is null\n  if (path === null) return {}\n  // If the path is undefined (i.e. omitted) default to $\n  if (path === undefined) { inputPath = '$' }\n  const wrappedInput = {\n    $: input,\n  }\n  const lens = lensPath(inputPath!.split('.'))\n  return view(lens, wrappedInput)\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"419f8c13b1782ebb1c3fc084cfadffdc40875355"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyOutputPath.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyOutputPath.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":8,"column":21},"end":{"line":8,"column":25}},"5":{"start":{"line":10,"column":4},"end":{"line":11,"column":18}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":18}},"7":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"9":{"start":{"line":16,"column":23},"end":{"line":18,"column":5}},"10":{"start":{"line":19,"column":15},"end":{"line":19,"column":54}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}}},"fnMap":{"0":{"name":"applyOutputPath","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":39},"end":{"line":21,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":11,"column":18}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":11,"column":18}},{"start":{"line":10,"column":4},"end":{"line":11,"column":18}}]},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}]}},"s":{"0":5,"1":5,"2":5,"3":5,"4":14,"5":14,"6":1,"7":13,"8":12,"9":13,"10":13,"11":13,"12":5},"f":{"0":14},"b":{"0":[1,13],"1":[12,1]},"inputSourceMap":{"version":3,"file":"applyOutputPath.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyOutputPath.ts"],"names":[],"mappings":";;AAAA,+BAAsC;AAEtC;;GAEG;AACH,yBACE,MAAa,EACb,IAA+B;IAE/B,IAAI,UAAU,GAAG,IAAI,CAAA;IACrB,uCAAuC;IACvC,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;QAAC,MAAM,CAAC,EAAE,CAAA;IAC5B,uDAAuD;IACvD,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;QAAC,UAAU,GAAG,GAAG,CAAA;IAAC,CAAC;IAC5C,IAAM,YAAY,GAAG;QACnB,CAAC,EAAE,MAAM;KACV,CAAA;IACD,IAAM,IAAI,GAAG,gBAAQ,CAAC,UAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;IAC7C,MAAM,CAAC,YAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;AACjC,CAAC;AAdD,kCAcC","sourcesContent":["import { lensPath, view } from 'ramda'\n\n/**\n * https://docs.aws.amazon.com/step-functions/latest/dg/awl-ref-filters.html\n */\nexport default function applyOutputPath(\n  result: mixed,\n  path: string | undefined | null,\n) {\n  let outputPath = path\n  // If the path is null return the input\n  if (path === null) return {}\n  // If the path is undefined (i.e. omitted) default to $\n  if (path === undefined) { outputPath = '$' }\n  const wrappedInput = {\n    $: result,\n  }\n  const lens = lensPath(outputPath!.split('.'))\n  return view(lens, wrappedInput)\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"211100dae95f923c01d327a0c1590ee9213edb3f"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyResultPath.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyResultPath.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":8,"column":21},"end":{"line":8,"column":25}},"5":{"start":{"line":10,"column":4},"end":{"line":11,"column":21}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"7":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"9":{"start":{"line":16,"column":23},"end":{"line":18,"column":5}},"10":{"start":{"line":19,"column":18},"end":{"line":19,"column":57}},"11":{"start":{"line":20,"column":24},"end":{"line":20,"column":66}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":62}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}}},"fnMap":{"0":{"name":"applyResultPath","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":46},"end":{"line":22,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":11,"column":21}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":11,"column":21}},{"start":{"line":10,"column":4},"end":{"line":11,"column":21}}]},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}]}},"s":{"0":5,"1":5,"2":5,"3":5,"4":11,"5":11,"6":1,"7":10,"8":7,"9":10,"10":10,"11":10,"12":10,"13":5},"f":{"0":11},"b":{"0":[1,10],"1":[7,3]},"inputSourceMap":{"version":3,"file":"applyResultPath.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/applyResultPath.ts"],"names":[],"mappings":";;AAAA,+BAAqD;AAErD;;GAEG;AACH,yBACE,KAAY,EACZ,MAAa,EACb,IAA+B;IAE/B,IAAI,UAAU,GAAG,IAAI,CAAA;IACrB,uCAAuC;IACvC,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;QAAC,MAAM,CAAC,KAAK,CAAA;IAC/B,uDAAuD;IACvD,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;QAAC,UAAU,GAAG,GAAG,CAAA;IAAC,CAAC;IAC5C,IAAM,YAAY,GAAG;QACnB,CAAC,EAAE,KAAK;KACT,CAAA;IACD,IAAM,OAAO,GAAG,gBAAQ,CAAC,UAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;IAChD,IAAM,aAAa,GAAG,WAAG,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,CAAA;IACxD,MAAM,CAAC,YAAI,CAAC,gBAAQ,CAAC,GAAG,CAAC,EAAE,aAAa,CAAC,CAAA;AAC3C,CAAC;AAhBD,kCAgBC","sourcesContent":["import { lensPath, lensProp, view, set } from 'ramda'\n\n/**\n * https://docs.aws.amazon.com/step-functions/latest/dg/awl-ref-filters.html\n */\nexport default function applyResultPath(\n  input: mixed,\n  result: mixed,\n  path: string | undefined | null,\n) {\n  let resultPath = path\n  // If the path is null return the input\n  if (path === null) return input\n  // If the path is undefined (i.e. omitted) default to $\n  if (path === undefined) { resultPath = '$' }\n  const wrappedInput = {\n    $: input,\n  }\n  const resLens = lensPath(resultPath!.split('.'))\n  const appliedResult = set(resLens, result, wrappedInput)\n  return view(lensProp('$'), appliedResult)\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"91f6dfaa42e15a553b3152c94dd2c61ee43066bc"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/getVariable.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/getVariable.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":39}},"5":{"start":{"line":5,"column":27},"end":{"line":5,"column":37}},"6":{"start":{"line":6,"column":23},"end":{"line":8,"column":5}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":73}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}}},"fnMap":{"0":{"name":"getVariable","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":34},"end":{"line":10,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":39}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":39}},{"start":{"line":5,"column":4},"end":{"line":5,"column":39}}]}},"s":{"0":4,"1":4,"2":4,"3":4,"4":6,"5":0,"6":6,"7":6,"8":4},"f":{"0":6},"b":{"0":[0,6]},"inputSourceMap":{"version":3,"file":"getVariable.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/getVariable.ts"],"names":[],"mappings":";;AAAA,+BAAsC;AAEtC,qBACE,KAAY,EACZ,IAAS;IAAT,qBAAA,EAAA,SAAS;IAET,IAAM,YAAY,GAAG;QACnB,CAAC,EAAE,KAAK;KACT,CAAA;IACD,MAAM,CAAC,YAAI,CAAC,gBAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,CAAA;AACtD,CAAC;AARD,8BAQC","sourcesContent":["import { lensPath, view } from 'ramda'\n\nexport default function getVariable(\n  input: mixed,\n  path = '',\n) {\n  const wrappedInput = {\n    $: input,\n  }\n  return view(lensPath(path.split('.')), wrappedInput)\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"6ffa38cfd0111bc4453a3c190f45f06ed3309f6f"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/index.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/index.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":3,"column":23},"end":{"line":3,"column":50}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"5":{"start":{"line":5,"column":24},"end":{"line":5,"column":52}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"7":{"start":{"line":7,"column":24},"end":{"line":7,"column":52}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"9":{"start":{"line":9,"column":13},"end":{"line":9,"column":30}},"10":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"11":{"start":{"line":11,"column":21},"end":{"line":11,"column":46}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"13":{"start":{"line":13,"column":20},"end":{"line":13,"column":44}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"15":{"start":{"line":15,"column":25},"end":{"line":15,"column":54}},"16":{"start":{"line":16,"column":0},"end":{"line":16,"column":54}}},"fnMap":{},"branchMap":{},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/index.ts"],"names":[],"mappings":";;AAAA,mDAA6C;AAQ3C,kDAAc;AAPhB,qDAA+C;AAQ7C,oDAAe;AAPjB,qDAA+C;AAQ7C,oDAAe;AAPjB,+BAAyB;AAQvB,8BAAI;AAPN,+CAAyC;AAQvC,8CAAY;AAPd,6CAAuC;AAQrC,4CAAW;AAPb,uDAAiD;AAQ/C,sDAAgB","sourcesContent":["import applyInputPath from './applyInputPath'\nimport applyOutputPath from './applyOutputPath'\nimport applyResultPath from './applyResultPath'\nimport noop from './noop'\nimport resolveThunk from './resolveThunk'\nimport getVariable from './getVariable'\nimport runRuleCondition from './runRuleCondition'\nexport {\n  applyInputPath,\n  applyOutputPath,\n  applyResultPath,\n  noop,\n  resolveThunk,\n  getVariable,\n  runRuleCondition\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"fd505d93ad3643d2d222dca638b5a00d899c1d1a"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/noop.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/noop.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":17}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":16}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":23}}},"fnMap":{"0":{"name":"noop","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":13}},"loc":{"start":{"line":3,"column":16},"end":{"line":9,"column":1}}}},"branchMap":{},"s":{"0":4,"1":4,"2":4,"3":1,"4":1,"5":1,"6":1,"7":4},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"noop.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/noop.ts"],"names":[],"mappings":";;AAAA;IAA6B,cAAgB;SAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;QAAhB,yBAAgB;;IAC3C,MAAM,CAAC,IAAI,CAAA;AACb,CAAC;AAFD,uBAEC","sourcesContent":["export default function noop(...args: mixed[]): mixed[] {\n  return args\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"186337d205fb406bdd462d7701b766e7a12f1a34"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/resolveThunk.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/resolveThunk.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"4":{"start":{"line":5,"column":8},"end":{"line":5,"column":23}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}}},"fnMap":{"0":{"name":"resolveThunk","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":21}},"loc":{"start":{"line":3,"column":29},"end":{"line":8,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},{"start":{"line":4,"column":4},"end":{"line":6,"column":5}}]}},"s":{"0":4,"1":4,"2":4,"3":4,"4":1,"5":3,"6":4},"f":{"0":4},"b":{"0":[1,3]},"inputSourceMap":{"version":3,"file":"resolveThunk.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/resolveThunk.ts"],"names":[],"mappings":";;AAAA,sBAAwC,KAAe;IACrD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,EAAE,CAAA;IAChB,CAAC;IACD,MAAM,CAAC,KAAK,CAAA;AACd,CAAC;AALD,+BAKC","sourcesContent":["export default function resolveThunk<T>(thunk: Thunk<T>): T {\n  if (typeof thunk === 'function') {\n    return thunk()\n  }\n  return thunk\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"7094d9033ea6f784cc0bfb9a842d886bcea7a98d"}
,"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/runRuleCondition.ts": {"path":"/Users/michaelparis/Scaphold/code/stateslang-js/src/utils/runRuleCondition.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":42}},"1":{"start":{"line":1,"column":42},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":4,"column":4},"end":{"line":5,"column":57}},"4":{"start":{"line":5,"column":8},"end":{"line":5,"column":57}},"5":{"start":{"line":8,"column":4},"end":{"line":9,"column":57}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":57}},"7":{"start":{"line":12,"column":4},"end":{"line":13,"column":58}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":58}},"9":{"start":{"line":16,"column":4},"end":{"line":62,"column":5}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":32}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":36}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":32}},"13":{"start":{"line":22,"column":12},"end":{"line":22,"column":34}},"14":{"start":{"line":24,"column":12},"end":{"line":24,"column":32}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":34}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":32}},"17":{"start":{"line":28,"column":12},"end":{"line":28,"column":35}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":32}},"19":{"start":{"line":31,"column":12},"end":{"line":31,"column":35}},"20":{"start":{"line":33,"column":12},"end":{"line":33,"column":32}},"21":{"start":{"line":34,"column":12},"end":{"line":34,"column":36}},"22":{"start":{"line":36,"column":12},"end":{"line":36,"column":32}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":34}},"24":{"start":{"line":39,"column":12},"end":{"line":39,"column":32}},"25":{"start":{"line":40,"column":12},"end":{"line":40,"column":34}},"26":{"start":{"line":42,"column":12},"end":{"line":42,"column":32}},"27":{"start":{"line":43,"column":12},"end":{"line":43,"column":35}},"28":{"start":{"line":45,"column":12},"end":{"line":45,"column":32}},"29":{"start":{"line":46,"column":12},"end":{"line":46,"column":35}},"30":{"start":{"line":48,"column":12},"end":{"line":48,"column":33}},"31":{"start":{"line":49,"column":12},"end":{"line":49,"column":36}},"32":{"start":{"line":51,"column":12},"end":{"line":51,"column":76}},"33":{"start":{"line":53,"column":12},"end":{"line":53,"column":74}},"34":{"start":{"line":55,"column":12},"end":{"line":55,"column":74}},"35":{"start":{"line":57,"column":12},"end":{"line":57,"column":75}},"36":{"start":{"line":59,"column":12},"end":{"line":59,"column":75}},"37":{"start":{"line":61,"column":12},"end":{"line":61,"column":25}},"38":{"start":{"line":64,"column":0},"end":{"line":64,"column":35}}},"fnMap":{"0":{"name":"expectString","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":21}},"loc":{"start":{"line":3,"column":27},"end":{"line":6,"column":1}}},"1":{"name":"expectNumber","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":27},"end":{"line":10,"column":1}}},"2":{"name":"expectBoolean","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":28},"end":{"line":14,"column":1}}},"3":{"name":"runRuleCondition","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":25}},"loc":{"start":{"line":15,"column":52},"end":{"line":63,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":4},"end":{"line":5,"column":57}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":5,"column":57}},{"start":{"line":4,"column":4},"end":{"line":5,"column":57}}]},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":9,"column":57}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":9,"column":57}},{"start":{"line":8,"column":4},"end":{"line":9,"column":57}}]},"2":{"loc":{"start":{"line":12,"column":4},"end":{"line":13,"column":58}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":13,"column":58}},{"start":{"line":12,"column":4},"end":{"line":13,"column":58}}]},"3":{"loc":{"start":{"line":16,"column":4},"end":{"line":62,"column":5}},"type":"switch","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":36}},{"start":{"line":20,"column":8},"end":{"line":22,"column":34}},{"start":{"line":23,"column":8},"end":{"line":25,"column":34}},{"start":{"line":26,"column":8},"end":{"line":28,"column":35}},{"start":{"line":29,"column":8},"end":{"line":31,"column":35}},{"start":{"line":32,"column":8},"end":{"line":34,"column":36}},{"start":{"line":35,"column":8},"end":{"line":37,"column":34}},{"start":{"line":38,"column":8},"end":{"line":40,"column":34}},{"start":{"line":41,"column":8},"end":{"line":43,"column":35}},{"start":{"line":44,"column":8},"end":{"line":46,"column":35}},{"start":{"line":47,"column":8},"end":{"line":49,"column":36}},{"start":{"line":50,"column":8},"end":{"line":51,"column":76}},{"start":{"line":52,"column":8},"end":{"line":53,"column":74}},{"start":{"line":54,"column":8},"end":{"line":55,"column":74}},{"start":{"line":56,"column":8},"end":{"line":57,"column":75}},{"start":{"line":58,"column":8},"end":{"line":59,"column":75}},{"start":{"line":60,"column":8},"end":{"line":61,"column":25}}]}},"s":{"0":5,"1":5,"2":5,"3":19,"4":0,"5":13,"6":0,"7":2,"8":0,"9":46,"10":9,"11":9,"12":2,"13":2,"14":2,"15":2,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":2,"23":2,"24":2,"25":2,"26":3,"27":3,"28":3,"29":3,"30":2,"31":2,"32":2,"33":2,"34":2,"35":3,"36":3,"37":0,"38":5},"f":{"0":19,"1":13,"2":2,"3":46},"b":{"0":[0,19],"1":[0,13],"2":[0,2],"3":[9,2,2,3,3,3,2,2,3,3,2,2,2,2,3,3,0]},"inputSourceMap":{"version":3,"file":"runRuleCondition.js","sourceRoot":"","sources":["file:////Users/michaelparis/Scaphold/code/stateslang-js/src/utils/runRuleCondition.ts"],"names":[],"mappings":"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","sourcesContent":["import { RuleOperator } from '../interface/IChoiceState';\n\nfunction expectString(val: mixed) {\n  if (typeof val !== 'string') throw new Error('Expected value of type string')\n}\n\nfunction expectNumber(val: mixed) {\n  if (typeof val !== 'number') throw new Error('Expected value of type number')\n}\n\nfunction expectBoolean(val: mixed) {\n  if (typeof val !== 'boolean') throw new Error('Expected value of type boolean')\n}\n\nexport default function runRuleCondition(operation: RuleOperator, value: mixed, expect: mixed): boolean {\n  switch(operation) {\n    case 'StringEquals':\n      expectString(value)\n      return expect === value\n    case 'StringLessThan':\n      expectString(value)\n      return value! < expect!\n    case 'StringGreaterThan':\n      expectString(value)\n      return value! > expect!\n    case 'StringLessThanEquals':\n      expectString(value)\n      return value! <= expect!\n    case 'StringGreaterThanEquals':\n      expectString(value)\n      return value! >= expect!\n    case 'NumericEquals':\n      expectNumber(value)\n      return value! === expect!\n    case 'NumericLessThan':\n      expectNumber(value)\n      return value! < expect!\n    case 'NumericGreaterThan':\n      expectNumber(value)\n      return value! > expect!\n    case 'NumericLessThanEquals':\n      expectNumber(value)\n      return value! <= expect!\n    case 'NumericGreaterThanEquals':\n      expectNumber(value)\n      return value! >= expect!\n    case 'BooleanEquals':\n      expectBoolean(value)\n      return value! === expect!\n    case 'TimestampEquals':\n      return new Date(value as string).getTime() === new Date(expect as string).getTime()\n    case 'TimestampLessThan':\n      return new Date(value as string).getTime() < new Date(expect as string).getTime()\n    case 'TimestampGreaterThan':\n      return new Date(value as string).getTime() > new Date(expect as string).getTime()\n    case 'TimestampLessThanEquals':\n      return new Date(value as string).getTime() <= new Date(expect as string).getTime()\n    case 'TimestampGreaterThanEquals':\n      return new Date(value as string).getTime() >= new Date(expect as string).getTime()\n    default:\n      return false\n  }\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"cb53330c157b1521cd1c35fb811bd1792b676a7a"}
}
